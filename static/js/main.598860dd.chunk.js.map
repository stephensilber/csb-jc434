{"version":3,"sources":["App.js","DirtyFigmaExport.js","index.js"],"names":["baubleMaterial","THREE","color","emissive","baubles","metalness","roughness","envMapIntensity","Array","map","args","Math","floor","random","mass","angularDamping","linearDamping","Bauble","vec","props","nodes","useGLTF","useCompoundBody","shapes","type","position","setScalar","toArray","ref","api","useEffect","subscribe","p","applyForce","set","normalize","multiplyScalar","dispose","castShadow","receiveShadow","scale","geometry","BASE_HEART","material","Collisions","viewport","useThree","state","usePlane","rotation","PI","useSphere","useFrame","mouse","x","width","y","height","App","shadows","dpr","gl","alpha","stencil","depth","antialias","camera","fov","near","far","onCreated","toneMappingExposure","intensity","penumbra","angle","gravity","iterations","broadphase","i","Environment","files","multisampling","samples","radius","luminanceInfluence","Underlay","style","top","left","padding","display","flexDirection","alignItems","justifyContent","pointerEvents","fontFamily","flex","fontSize","fontWeight","lineHeight","letterSpacing","marginBottom","gap","className","textAlign","whiteSpace","href","transform","transformOrigin","pointer","Overlay","bottom","right","viewBox","fill","xmlns","d","ReactDOM","render","fallback","document","getElementById"],"mappings":"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","file":"static/js/main.598860dd.chunk.js","sourcesContent":["import * as THREE from \"three\"\nimport { useEffect } from \"react\"\nimport { Canvas, useFrame, useThree } from \"@react-three/fiber\"\nimport { Physics, usePlane, useCompoundBody, useSphere } from \"@react-three/cannon\"\nimport { Environment, useGLTF } from \"@react-three/drei\"\nimport { EffectComposer, SSAO } from \"@react-three/postprocessing\"\n\nconst baubleMaterial = new THREE.MeshLambertMaterial({ color: \"#c0a090\", emissive: \"red\" })\nconst capMaterial = new THREE.MeshStandardMaterial({ metalness: 1, roughness: 0.15, color: \"#8a300f\", emissive: \"#600000\", envMapIntensity: 9 })\nconst sphereGeometry = new THREE.SphereGeometry(1, 28, 28)\nconst baubles = [...Array(50)].map(() => ({ args: [0.6, 0.6, 0.8, 0.8, 1][Math.floor(Math.random() * 5)], mass: 1, angularDamping: 0.2, linearDamping: 0.95 }))\n\nfunction Bauble({ vec = new THREE.Vector3(), ...props }) {\n  const { nodes } = useGLTF(\"/PUMPINGHEARTMODEL.gltf\")\n  const [ref, api] = useCompoundBody(() => ({\n    ...props,\n    shapes: [\n      { type: \"Box\", position: [0, 0, 1.2 * props.args], args: new THREE.Vector3().setScalar(props.args * 0.4).toArray() },\n      { type: \"Sphere\", args: [props.args] },\n    ],\n  }))\n  useEffect(() => api.position.subscribe((p) => api.applyForce(vec.set(...p).normalize().multiplyScalar(-props.args * 5).toArray(), [0, 0, 0])), [api]) // prettier-ignore\n  return (\n    <group ref={ref} dispose={null}>\n      <mesh castShadow receiveShadow scale={0.025 * props.args} geometry={nodes.BASE_HEART.geometry} material={baubleMaterial} />\n      {/* <mesh castShadow scale={0.0015 * props.args} position={[0, 0, -1.8 * props.args]} geometry={nodes.BASE_HEART.geometry} material={capMaterial} /> */}\n    </group>\n  )\n}\n\nfunction Collisions() {\n  const viewport = useThree((state) => state.viewport)\n  usePlane(() => ({ position: [0, 0, 0], rotation: [0, 0, 0] }))\n  usePlane(() => ({ position: [0, 0, 8], rotation: [0, -Math.PI, 0] }))\n  usePlane(() => ({ position: [0, -4, 0], rotation: [-Math.PI / 2, 0, 0] }))\n  usePlane(() => ({ position: [0, 4, 0], rotation: [Math.PI / 2, 0, 0] }))\n  const [, api] = useSphere(() => ({ type: \"Kinematic\", args: [2] }))\n  return useFrame((state) => api.position.set((state.mouse.x * viewport.width) / 2, (state.mouse.y * viewport.height) / 2, 2.5))\n}\n\nexport const App = () => (\n  <Canvas\n    shadows\n    dpr={1.5}\n    gl={{ alpha: true, stencil: false, depth: false, antialias: false }}\n    camera={{ position: [0, 0, 20], fov: 35, near: 10, far: 40 }}\n    onCreated={(state) => (state.gl.toneMappingExposure = 1.5)}>\n    <ambientLight intensity={0.75} />\n    <spotLight position={[20, 20, 25]} penumbra={1} angle={0.2} color=\"white\" castShadow shadow-mapSize={[512, 512]} />\n    <directionalLight position={[0, 5, -4]} intensity={4} />\n    <directionalLight position={[0, -15, -0]} intensity={4} color=\"red\" />\n    <Physics gravity={[0, 0, 0]} iterations={10} broadphase=\"SAP\">\n      <Collisions />\n      {baubles.map((props, i) => <Bauble key={i} {...props} />) /* prettier-ignore */}\n    </Physics>\n    <Environment files=\"/adamsbridge.hdr\" />\n    <EffectComposer multisampling={0}>\n      <SSAO samples={11} radius={30} intensity={20} luminanceInfluence={0.6} color=\"red\" />\n      <SSAO samples={21} radius={5} intensity={30} luminanceInfluence={0.6} color=\"red\" />\n    </EffectComposer>\n  </Canvas>\n)\n","export function Underlay() {\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        padding: 40,\n        display: \"inline-flex\",\n        flexDirection: \"column\",\n        alignItems: \"flex-start\",\n        justifyContent: \"flex-start\",\n        pointerEvents: \"none\",\n      }}>\n      <div style={{ width: \"100%\", padding: 0, display: \"inline-flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\" }}>\n        <p\n          style={{\n            fontFamily: \"'Antonio', sans-serif\",\n            flex: \"1 1 0%\",\n            height: 30,\n            fontSize: 30,\n            fontWeight: \"700\",\n            lineHeight: \"30px\",\n            color: \"black\",\n            letterSpacing: -2,\n            marginBottom: 16,\n          }}>\n          STEPHEN & JULIA\n        </p>\n        <div style={{ flex: \"1 1 0%\", display: \"flex\", gap: \"2em\" }}>\n          <p\n            className=\"full\"\n            style={{ flex: \"1 1 0%\", height: 14, fontSize: 14, lineHeight: \"14px\", textAlign: \"center\", color: \"black\", whiteSpace: \"nowrap\" }}>\n            DETAILS\n          </p>\n          <p className=\"full\" style={{ flex: \"1 1 0%\", height: 14, fontSize: 14, lineHeight: \"14px\", textAlign: \"center\", color: \"black\" }}>\n            GALLERY\n          </p>\n          <p className=\"full\" style={{ flex: \"1 1 0%\", height: 14, fontSize: 14, lineHeight: \"14px\", textAlign: \"center\", color: \"black\" }}>\n            RSVP\n          </p>\n          <p className=\"full\" style={{ flex: \"1 1 0%\", height: 14, fontSize: 14, lineHeight: \"14px\", textAlign: \"center\", color: \"black\" }}>\n            <a href=\"https://silber.io/registry\">REGISTRY</a>\n          </p>\n        </div>\n      </div>\n      <div style={{ height: 60 }} />\n      <div style={{ width: \"100%\", padding: 0, display: \"inline-flex\", flexDirection: \"row\", alignItems: \"flex-start\", justifyContent: \"center\" }}>\n        <p style={{ flex: \"1 1 0%\", height: \"100%\", fontSize: 14, lineHeight: \"1.5em\", color: \"black\" }}>\n          <b>April 7th, 2022 at 4pm</b>\n          <br />\n          Brooklyn, NY\n          <br />\n          <b></b>\n        </p>\n        <div style={{ width: 10 }} />\n        <p\n          style={{\n            transform: \"rotate3d(0, 0, 1, 90deg) translate3d(100%,10px,0)\",\n            transformOrigin: \"right\",\n            fontSize: 12,\n            fontWeight: \"700\",\n            lineHeight: \"100%\",\n            textAlign: \"right\",\n            color: \"black\",\n            whiteSpace: \"nowrap\",\n          }}>\n          MADE WITH ❤ IN NYC\n        </p>\n      </div>\n      <div style={{ height: 10 }} />\n      <div\n        className=\"full\"\n        style={{\n          fontFamily: \"'Antonio', sans-serif\",\n          width: \"100%\",\n          flex: \"1 1 0%\",\n          padding: 0,\n          display: \"inline-flex\",\n          flexDirection: \"row\",\n          alignItems: \"flex-end\",\n          justifyContent: \"center\",\n        }}>\n        {/* <p style={{ flex: \"1 1 0%\", fontSize: 250, lineHeight: \"1em\", color: \"black\", margin: 0, letterSpacing: -10 }}>X</p>\n        <div style={{ width: 10 }} />\n        <p style={{ flex: \"1 1 0%\", fontSize: 250, lineHeight: \"100%\", textAlign: \"right\", color: \"black\", margin: 0, letterSpacing: -10 }}>01-</p> */}\n      </div>\n      <div style={{ height: 60 }} />\n      <div\n        style={{\n          pointerEvents: \"all\",\n          pointer: \"auto\",\n          width: \"100%\",\n          padding: 0,\n          display: \"inline-flex\",\n          flexDirection: \"row\",\n          alignItems: \"flex-end\",\n          justifyContent: \"center\",\n        }}>\n        <p className=\"full\" style={{ whiteSpace: \"nowrap\", flex: \"1 1 0%\", fontSize: 12, lineHeight: \"1.5em\", color: \"black\" }}>\n          {/* <b>Wonders of Antiquity</b>\n          <br /> */}\n        </p>\n        <div style={{ width: 10 }} />\n        <p\n          className=\"full\"\n          style={{\n            fontFamily: \"'Antonio', sans-serif\",\n            flex: \"1 1 0%\",\n            fontSize: 16,\n            fontWeight: \"700\",\n            lineHeight: \"1em\",\n            textAlign: \"center\",\n            color: \"black\",\n            letterSpacing: -0.5,\n            whiteSpace: \"nowrap\",\n          }}></p>\n        {/* <div style={{ width: 10 }} /> */}\n        {/* <p className=\"full\" style={{ flex: \"1 1 0%\", fontSize: 12, lineHeight: \"1em\", textAlign: \"right\", color: \"black\" }}></p> */}\n      </div>\n    </div>\n  )\n}\n\nexport function Overlay() {\n  return (\n    <div style={{ position: \"absolute\", bottom: 70, right: 40 }}>\n      <p style={{ flex: \"1 1 0%\", height: 30, fontSize: 30, lineHeight: \"30px\", textAlign: \"right\", color: \"black\" }}>\n        <svg width=\"34\" height=\"64\" viewBox=\"0 0 34 64\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path\n            fill-rule=\"evenodd\"\n            clip-rule=\"evenodd\"\n            d=\"M12.6935 0.123819C12.4617 0.356262 12.5412 0.53601 13.167 1.19336C13.5014 1.54456 13.7439 1.83196 13.7059 1.83196C13.6681 1.83196 13.0837 1.55609 12.4077 1.21879C11.3626 0.697546 11.1529 0.626854 11.0083 0.747116C10.7658 0.94874 10.7916 1.09788 11.2147 1.93972C11.4217 2.3517 11.5911 2.70645 11.5911 2.72811C11.5911 2.74977 11.3238 2.82747 10.997 2.90075C9.7035 3.19074 7.58537 4.17558 6.40714 5.03466C6.09363 5.26333 5.49833 5.65019 5.08425 5.89449C3.95238 6.5624 3.4172 6.98322 3.4172 7.20531C3.4172 7.31491 3.26706 7.66621 3.08358 7.98584C2.14841 9.6152 0.949103 11.9321 0.946522 12.1148C0.944909 12.2287 1.02482 12.4119 1.1242 12.5219C1.29337 12.7093 1.29295 12.8018 1.11742 13.9852C1.01439 14.6799 0.808425 15.5878 0.660004 16.0027C-0.00993656 17.8741 -0.130719 18.8906 0.122458 20.5287C0.346704 21.9797 0.574607 22.7087 0.829182 22.7896C0.941359 22.8252 1.08279 22.9973 1.14355 23.172C1.46922 24.1081 2.35717 24.8931 3.09024 24.8931C3.27007 24.8931 3.4172 24.9364 3.4172 24.9893C3.4172 25.1271 3.7106 25.2209 3.90613 25.1457C3.99766 25.1105 4.192 24.8454 4.33817 24.5563C4.48433 24.2674 4.67642 24.031 4.76504 24.031C4.85356 24.031 5.0151 23.8843 5.12394 23.705L5.32184 23.3789L5.45789 24.3762C5.62879 25.6291 5.63653 25.6474 5.99801 25.6474C6.25474 25.6474 6.30722 25.7009 6.36778 26.0246C6.4066 26.232 6.40832 26.5624 6.37154 26.7589C6.28883 27.2008 6.50931 27.4287 6.91984 27.3256C7.15376 27.2668 7.18894 27.2865 7.13796 27.4483C6.98857 27.9232 6.43672 30.8635 6.32325 31.7899C6.25431 32.3529 6.21344 33.1288 6.23258 33.5141C6.26259 34.1196 6.30013 34.229 6.50932 34.3209C6.64246 34.3794 6.75131 34.4834 6.75131 34.5518C6.75131 34.6204 6.60955 35.239 6.43618 35.9265C6.13858 37.1072 6.06405 37.2663 5.09189 38.7935C2.66982 42.5987 0.316268 46.963 0.453181 47.3954C0.495449 47.5288 0.616445 47.631 0.732278 47.631C0.921139 47.631 0.931892 47.6948 0.872846 48.4661C0.826383 49.0725 0.884893 49.8474 1.08634 51.2949C1.23895 52.3914 1.41921 53.7734 1.48697 54.3661C1.72875 56.4831 2.41062 58.4658 3.3047 59.6524L3.72534 60.2106L3.46366 61.06C3.03313 62.4581 3.13455 62.9448 3.94227 63.3578C5.32377 64.064 10.5434 64.2261 12.828 63.6338C14.8011 63.1223 15.3477 62.2171 14.4912 60.8797C14.3006 60.5822 14.1632 60.3202 14.1859 60.2975C14.2085 60.2747 14.6383 60.3759 15.1408 60.5222C16.8343 61.0154 18.7661 61.0345 19.9855 60.5703C20.2783 60.4589 20.5179 60.384 20.5179 60.404C20.5179 60.424 20.3758 60.674 20.2021 60.9594C19.7268 61.7403 19.7247 62.2182 20.1945 62.7542C20.8503 63.5026 22.3666 63.8907 24.9903 63.9816C28.0473 64.0876 30.4299 63.7296 31.1493 63.0562C31.6428 62.5944 31.6664 62.3088 31.3057 61.1718C31.0036 60.2198 30.9966 60.1542 31.1487 59.6972C31.2362 59.4342 31.482 58.3492 31.6947 57.2862C32.0547 55.4887 32.0986 55.3525 32.3227 55.3359C32.6755 55.3099 32.71 55.2406 32.7954 54.3878C33.0028 52.3164 32.859 48.3282 32.518 46.6989L32.3774 46.0261L32.7125 45.9933C33.2262 45.9432 33.1992 45.6156 32.598 44.6029C31.8945 43.4177 30.6819 41.8178 29.2388 40.171L28.0371 38.7996L27.8364 37.3692C27.7261 36.5824 27.6067 35.6589 27.5711 35.3167C27.5075 34.706 27.511 34.6959 27.7576 34.7579C27.9199 34.7987 28.06 34.7593 28.1535 34.6463C28.3242 34.4403 28.0609 32.9767 27.1936 29.3114C26.8395 27.8145 26.705 27.0603 26.7766 26.9721C26.8383 26.896 27.0082 26.8672 27.1855 26.9028C27.5437 26.9745 27.7711 26.6994 27.8892 26.0515C27.9535 25.6992 28.0012 25.6474 28.2621 25.6474C28.6129 25.6474 28.6552 25.5623 28.7536 24.658C28.7944 24.2835 28.8459 23.9447 28.8683 23.905C28.9689 23.7264 29.5358 24.1748 29.7164 24.5761C29.9637 25.1255 30.2491 25.3006 30.5108 25.0634C30.614 24.9697 30.8297 24.8931 30.9902 24.8931C31.69 24.8931 32.5828 24.0878 32.903 23.1676C32.9646 22.9906 33.0812 22.8456 33.162 22.8456C33.5592 22.8456 33.9921 20.9804 33.9997 19.2356C34.0055 17.8952 33.9403 17.5518 33.3852 16.0027C33.2366 15.5878 33.0297 14.6729 32.9252 13.9697C32.7467 12.7664 32.7464 12.683 32.9186 12.5569C33.0191 12.4831 33.1001 12.3069 33.0985 12.1653C33.096 11.9473 32.1583 10.1108 30.9861 8.02829C30.8192 7.73195 30.6584 7.36825 30.6285 7.22008C30.5902 7.03085 30.318 6.77879 29.7136 6.37328C29.2404 6.0557 28.4982 5.52853 28.0641 5.20169C27.6301 4.87495 26.8153 4.36513 26.2534 4.06868C25.2612 3.54538 23.2751 2.80182 22.8695 2.80182C22.7592 2.80182 22.669 2.77639 22.669 2.74525C22.669 2.7141 22.8384 2.3517 23.0454 1.93972C23.4685 1.09788 23.4943 0.94874 23.2518 0.747116C23.1072 0.626854 22.8975 0.697546 21.8524 1.21879C21.1764 1.55609 20.592 1.83196 20.5542 1.83196C20.5162 1.83196 20.7587 1.54456 21.0931 1.19336C21.4275 0.842163 21.701 0.488163 21.701 0.406695C21.701 0.222314 21.487 0 21.3095 0C21.2362 0 20.3211 0.561119 19.2763 1.24703C18.2313 1.93283 17.3081 2.52024 17.2245 2.55235C17.1398 2.5849 16.2177 2.05287 15.1394 1.3494C14.076 0.655626 13.121 0.065735 13.0171 0.0385789C12.9131 0.011315 12.7675 0.0496785 12.6935 0.123819ZM15.6399 3.64485C15.7369 3.62566 15.8686 3.52695 15.9325 3.42533C16.0252 3.27781 15.9896 3.1791 15.7558 2.93458C15.3036 2.46162 15.4051 2.4503 16.0814 2.89827C17.1786 3.6248 17.0624 3.61747 17.9797 3.01756C18.8353 2.45784 18.9862 2.43069 18.5178 2.92047C18.1919 3.26121 18.2388 3.66392 18.6042 3.66392C18.7268 3.66392 19.5704 3.28018 20.4791 2.81109C21.3878 2.34211 22.1312 1.97712 22.1312 1.99996C22.1312 2.02291 22.0238 2.26322 21.8926 2.53392C21.5944 3.14882 21.6972 3.35787 22.3573 3.47846C23.2653 3.64441 24.9148 4.23495 25.85 4.72883C26.6191 5.13498 26.7958 5.27497 26.8116 5.49038C26.8221 5.63554 26.8986 5.7766 26.9816 5.80376C27.6039 6.00764 29.2972 6.99464 29.4387 7.23592C29.5308 7.39282 29.7848 7.73389 30.0031 7.99381C30.2216 8.25373 30.4958 8.68963 30.6125 8.96238C30.7292 9.23523 31.0554 9.86403 31.3373 10.3598C31.6193 10.8555 31.8414 11.3736 31.831 11.5111C31.7906 12.0443 32.3765 15.5029 32.6285 16.2182C33.1861 17.8012 33.2337 18.0823 33.1893 19.5367C33.1486 20.8643 33.1368 20.9241 32.8675 21.1531C32.6925 21.3018 32.5402 21.5919 32.4603 21.9282C32.3902 22.2237 32.2334 22.6969 32.112 22.9797C31.8837 23.5115 31.2798 24.1388 30.9962 24.1388C30.6915 24.1388 30.1759 23.6542 29.907 23.115C29.7592 22.8187 29.5459 22.5029 29.433 22.4135C29.0847 22.137 28.7667 20.266 28.7558 18.4274C28.748 17.121 28.8135 16.4319 29.1555 14.2246C29.6232 11.2067 29.7938 8.25427 29.5294 7.75889C29.3593 7.44034 28.9982 7.35726 28.8038 7.59196C28.6919 7.7271 28.6916 7.82128 28.8022 8.08907C29.0679 8.73144 28.8549 11.1057 28.0447 16.5366C27.8474 17.8591 27.8346 18.182 27.9377 19.2167C28.0024 19.8637 28.1189 20.7388 28.1968 21.1614C28.3187 21.8219 28.314 22.1185 28.1636 23.2767C28.0013 24.5258 27.9712 24.6262 27.7484 24.6582C27.4704 24.6981 27.3427 24.8985 27.2375 25.4608C27.1735 25.8029 27.1198 25.8636 26.8784 25.8672C26.6705 25.8703 26.5029 25.9964 26.252 26.3384C25.9808 26.708 25.8566 26.7955 25.6574 26.7573C25.4938 26.726 25.3348 26.7875 25.2037 26.9326C25.0882 27.0604 24.8688 27.1561 24.6915 27.1561C24.5209 27.1561 24.1894 27.2542 23.9551 27.374C23.5696 27.571 23.5055 27.5764 23.2837 27.4309C23.0615 27.285 23.0051 27.2904 22.6811 27.4877C22.3578 27.6848 22.2659 27.6935 21.7166 27.5799C21.3827 27.511 20.9159 27.356 20.6793 27.2357C20.1215 26.9521 18.582 25.9454 18.582 25.8643C18.582 25.8298 18.731 25.7135 18.9129 25.6057C19.3025 25.3752 20.1355 24.2852 20.4375 23.6108C20.8746 22.6346 20.5313 21.7366 19.5219 21.2165C18.8857 20.8887 17.5564 20.7405 16.629 20.8939C14.5506 21.2378 13.8557 22.4226 14.7908 24.0278C15.1985 24.7277 15.8485 25.4729 16.3017 25.7602C16.544 25.9137 16.528 25.9306 15.4951 26.6148C13.7549 27.7674 12.5469 28.0572 11.6581 27.5353C11.2406 27.2902 11.1835 27.2815 10.97 27.4314C10.7584 27.5799 10.697 27.5743 10.2951 27.3689C10.0521 27.2446 9.73963 27.1578 9.601 27.176C9.44881 27.196 9.24124 27.1077 9.07701 26.9532C8.90407 26.7904 8.72639 26.7178 8.58872 26.7539C8.42761 26.7962 8.27338 26.6896 7.98482 26.3368C7.72938 26.0244 7.51224 25.863 7.34757 25.863C7.14441 25.863 7.08386 25.7881 7.02266 25.4608C6.91737 24.8985 6.7897 24.6981 6.51168 24.6582C6.28894 24.6262 6.25937 24.5279 6.10514 23.3061C6.01372 22.5814 5.8881 21.9376 5.82604 21.8754C5.74753 21.7968 5.75527 21.5595 5.85174 21.0918C5.92789 20.7228 6.0448 19.8633 6.1117 19.1817C6.22452 18.0322 6.21322 17.8137 5.95521 16.1644C5.21525 11.4346 4.97692 8.7322 5.24278 8.08907C5.35346 7.82128 5.35313 7.7271 5.24117 7.59196C5.04683 7.35726 4.68567 7.44034 4.51563 7.75889C4.25116 8.25427 4.42184 11.2067 4.88948 14.2246C5.23149 16.4319 5.29699 17.121 5.28925 18.4274C5.27774 20.3627 4.97079 22.084 4.57091 22.4552C4.43238 22.5839 4.2276 22.9106 4.11586 23.1812C3.97335 23.5267 3.79245 23.7427 3.50926 23.9061C2.99215 24.2043 2.95785 24.2012 2.52033 23.8162C2.12626 23.4696 1.78919 22.7894 1.58473 21.9282C1.50525 21.5935 1.35242 21.3017 1.17948 21.1546C0.9149 20.9295 0.899736 20.857 0.855102 19.6041C0.805951 18.2213 0.911459 17.4778 1.27326 16.6582C1.38512 16.4049 1.54795 15.887 1.63507 15.5074C1.86706 14.4971 2.25736 11.6555 2.18121 11.5319C2.14518 11.4736 2.38266 10.9428 2.70886 10.3526C3.03496 9.7623 3.37579 9.10204 3.46614 8.88544C3.55648 8.66883 3.83644 8.2449 4.08843 7.94349C4.34032 7.64207 4.59489 7.2953 4.65405 7.17299C4.71718 7.04259 5.26096 6.70573 5.96973 6.35798C6.81638 5.94255 7.19679 5.69718 7.24142 5.53748C7.37941 5.0436 9.75544 3.95143 11.5298 3.56618C12.5871 3.33675 12.6933 3.20571 12.3676 2.53392C12.2363 2.26322 12.1289 2.02291 12.1289 1.99996C12.1289 1.97712 12.8792 2.34556 13.7962 2.81896C14.7133 3.29236 15.5429 3.66392 15.6399 3.64485ZM10.2414 14.6995C9.54486 15.0034 9.03388 15.9494 9.16961 16.6832C9.44569 18.1758 11.1452 18.7737 12.2784 17.7768C12.7626 17.3508 12.9187 16.9345 12.8599 16.2255C12.7533 14.9373 11.4444 14.1745 10.2414 14.6995ZM22.0774 14.7433C20.9549 15.4635 20.753 16.8237 21.6371 17.7097C22.8198 18.8946 24.82 18.0629 24.82 16.3862C24.82 15.8205 24.4943 15.176 24.0473 14.857C23.5637 14.512 22.5308 14.4523 22.0774 14.7433ZM11.7058 14.9827C12.0169 15.1497 11.9817 15.6837 11.6449 15.9049C11.3958 16.0683 11.3562 16.0683 11.1072 15.9049C10.7971 15.7013 10.7592 15.3529 11.0163 15.0683C11.2183 14.8447 11.4051 14.8215 11.7058 14.9827ZM23.6831 15.0405C23.9391 15.2971 23.8923 15.7019 23.5832 15.9049C23.3341 16.0683 23.2945 16.0683 23.0454 15.9049C22.7353 15.7013 22.6975 15.3529 22.9545 15.0683C23.173 14.8264 23.4585 14.8156 23.6831 15.0405ZM18.2378 26.6629C18.3976 26.7473 18.9213 27.0769 19.4019 27.3955C19.8823 27.714 20.4752 28.0407 20.7194 28.1214C20.9635 28.2022 21.1632 28.3038 21.1632 28.3473C21.1632 28.4178 19.8592 28.9881 19.6978 28.9881C19.662 28.9881 19.711 28.8686 19.8065 28.7224C20.0335 28.3753 20.0262 28.1582 19.783 28.0278C19.6318 27.9468 19.2998 28.0462 18.358 28.4552L17.1301 28.9882L15.9765 28.4906L14.823 27.993L15.9663 27.2513C17.1948 26.4545 17.6297 26.3418 18.2378 26.6629ZM8.04193 27.6834C8.04193 27.8491 8.3847 27.9201 8.54431 27.7874C8.6667 27.6857 8.77661 27.7386 9.09991 28.055C9.54453 28.49 9.67123 28.528 9.87106 28.2868C9.98765 28.1459 10.0693 28.183 10.4826 28.5647C10.9374 28.9847 10.9705 28.9972 11.1947 28.8334C11.6284 28.5167 11.7198 28.5231 12.4545 28.9207C13.9627 29.7369 15.2381 29.9753 15.6613 29.5201L15.8682 29.2977L16.4951 29.5626C16.9215 29.7427 17.192 29.7996 17.3411 29.7405C17.4616 29.6925 17.7504 29.5721 17.9828 29.4729C18.3964 29.2962 18.4093 29.2975 18.5865 29.5329C18.7525 29.7533 18.8326 29.7688 19.5423 29.7179C20.2118 29.67 20.4795 29.5801 21.5155 29.0556C22.5087 28.5527 22.7293 28.4763 22.8036 28.6094C22.8529 28.6977 22.9912 28.8224 23.1108 28.8866C23.2964 28.986 23.3844 28.9438 23.7089 28.5991C24.0647 28.221 24.1104 28.2028 24.4139 28.3176C24.7008 28.4261 24.7805 28.4082 25.1019 28.1626C25.3017 28.0098 25.4653 27.8463 25.4653 27.7992C25.4653 27.7521 25.6048 27.7664 25.7754 27.8309C26.0787 27.9457 26.0974 28.0009 26.6376 30.3809C26.9414 31.7189 27.1891 32.8499 27.188 32.8945C27.187 32.939 27.1153 32.9753 27.0286 32.9753C26.7027 32.9753 26.6489 33.3451 26.7607 34.8175C26.9434 37.2224 27.1856 38.6577 28.2163 43.4424C29.0935 47.515 29.4638 49.6115 29.3151 49.665C29.2533 49.6872 29.1065 49.8018 28.9888 49.9197C28.7843 50.1247 28.7772 50.2439 28.8287 52.6273C28.8986 55.8653 29.1931 57.4842 30.2673 60.5359C30.803 62.058 30.8393 62.3853 30.4958 62.6002C30.1974 62.787 29.2745 63.038 28.8801 63.0397L28.5843 63.041L28.581 61.9364C28.5771 60.6358 28.4215 59.3005 28.2496 59.0931C27.94 58.7193 27.3906 59.0853 27.593 59.5305C27.6568 59.6706 27.7432 60.5346 27.7849 61.4505L27.8609 63.1158L27.4429 63.1849C27.2129 63.223 26.7308 63.2547 26.3713 63.2553L25.7179 63.2565L25.4792 62.0449C25.2574 60.9183 25.0417 60.3469 24.8381 60.3469C24.7916 60.3469 24.6657 60.4112 24.5583 60.4899C24.3702 60.6277 24.3712 60.6678 24.5844 61.5945C24.706 62.1234 24.8209 62.7015 24.8397 62.8793L24.8738 63.2026L24.2823 63.1711C22.15 63.0576 20.6255 62.5446 20.6255 61.9407C20.6255 61.8281 20.817 61.4179 21.0511 61.0291C21.7133 59.929 22.2463 58.0472 22.4076 56.2405C22.4724 55.514 22.4579 55.4039 22.2791 55.2707C22.0948 55.1333 22.0773 54.9497 22.0758 53.1268C22.0741 50.9965 21.9085 49.8251 21.4621 48.7851C21.2009 48.1762 20.9599 48.0047 20.6672 48.2191C20.4834 48.3538 20.478 48.4019 20.6103 48.7268C21.2325 50.2556 21.4773 52.3467 21.2673 54.3392C21.0647 56.2608 21.0701 56.4735 21.3246 56.6162C21.4429 56.6826 21.5499 56.739 21.5625 56.7417C21.5751 56.7444 21.4893 57.2293 21.372 57.8193C21.1799 58.7854 21.1214 58.9255 20.7834 59.2278C19.5736 60.3098 17.0627 60.4245 14.5515 59.5125C13.7074 59.2059 13.6914 59.1932 13.5556 58.7233C13.3147 57.8898 13.0988 56.4533 13.0266 55.2042C12.9665 54.161 12.9802 53.9857 13.1261 53.9296C13.3704 53.8357 13.3976 53.7214 13.6327 51.7976C13.7498 50.8395 13.8954 49.8131 13.9564 49.5168C14.1949 48.3566 14.1968 48.3243 14.0353 48.1898C13.5862 47.8165 13.2936 48.4601 13.0317 50.3967C12.8689 51.6006 12.8109 51.8136 12.6234 51.8976C12.3103 52.0376 12.2592 52.3395 12.2472 54.12C12.2291 56.7843 12.6862 59.1885 13.4924 60.6702C14.2088 61.9871 14.1913 61.9421 14.075 62.1598C13.8347 62.6097 12.2866 63.0491 10.435 63.1927L9.54765 63.2616V62.582C9.54765 62.2083 9.61541 61.6408 9.69823 61.321C9.85913 60.6996 9.83664 60.5062 9.59315 60.4125C9.12411 60.2321 8.90213 60.7489 8.82308 62.2058L8.76607 63.2565H8.47429C8.31382 63.2565 7.73325 63.2245 7.18409 63.1855L6.18558 63.1145L6.24775 62.4581C6.28195 62.0971 6.46296 61.3294 6.6501 60.7521C6.83713 60.1748 6.96222 59.6292 6.92791 59.5398C6.8936 59.4502 6.74378 59.3771 6.59482 59.3771C6.38423 59.3771 6.28571 59.4669 6.1517 59.7812C5.89756 60.377 5.46069 62.1489 5.46069 62.5836V62.9608L5.01918 62.89C4.43851 62.797 3.95496 62.5394 3.95496 62.3233C3.95496 62.228 4.17393 61.4212 4.44163 60.5303C5.25225 57.8322 5.67213 55.034 5.67471 52.3132C5.67579 51.0845 5.60717 50.8638 5.22407 50.8638C5.04371 50.8638 5.03048 50.7074 5.0308 48.5739C5.03123 45.92 5.16632 44.1996 5.4808 42.8402C5.70246 41.8824 5.70257 41.8736 5.49338 41.7116C5.28699 41.5517 5.29237 41.5243 5.76237 40.3599C6.90597 37.5268 7.47589 35.4567 7.5772 33.7686C7.6384 32.7484 7.6285 32.6686 7.4263 32.5602C7.30724 32.4963 7.17269 32.4787 7.12731 32.5211C7.08192 32.5634 7.0702 32.3036 7.10128 31.9437C7.18216 31.0048 7.8521 27.5872 7.95513 27.5872C8.00289 27.5872 8.04193 27.6305 8.04193 27.6834ZM14.4161 28.6214C14.6058 29.0032 14.6057 29.0036 14.3717 28.9291C14.2428 28.8882 13.9637 28.7808 13.7515 28.6908L13.3657 28.5268L13.7422 28.3885C13.9492 28.3124 14.1428 28.2476 14.1724 28.2446C14.202 28.2415 14.3117 28.4111 14.4161 28.6214ZM30.229 42.5976C30.6899 43.1885 31.2102 43.8804 31.3853 44.1355C31.6904 44.5798 31.6947 44.6019 31.4883 44.6675C31.2179 44.7534 31.2175 44.9865 31.4861 45.8304C31.8621 47.0119 32.0375 48.4658 32.1018 50.9315L32.164 53.316L31.8554 53.4641C31.5999 53.5869 31.5322 53.7048 31.4617 54.1509C31.0885 56.5072 30.636 58.7305 30.5295 58.7305C30.4086 58.7305 29.8869 56.3606 29.7111 55.0127C29.6261 54.3607 29.5555 53.2273 29.5544 52.4941C29.5526 51.3406 29.5734 51.1783 29.7085 51.2906C29.8928 51.4438 30.2602 51.3521 30.3446 51.1317C30.4698 50.805 29.8268 47.1479 28.8973 42.9005C28.6069 41.5731 28.3692 40.4586 28.3692 40.4238C28.3692 40.3217 29.3255 41.4395 30.229 42.5976ZM4.38355 41.708C4.1122 42.3979 4.11489 42.6108 4.3971 42.7987C4.61393 42.9429 4.61866 42.9856 4.50154 43.7418C4.1763 45.8419 4.10973 52.6182 4.41066 52.9921C4.47024 53.0663 4.60844 53.1268 4.71761 53.1268C4.89948 53.1268 4.9111 53.2015 4.85581 54.0159C4.77483 55.2099 4.5451 56.819 4.26105 58.1816L4.02734 59.3031L3.81353 59.0437C3.09153 58.1681 2.44429 56.0297 2.18315 53.657C2.09066 52.8168 1.93804 51.6628 1.84415 51.0925C1.60086 49.6156 1.60323 48.1579 1.85039 47.3869C2.04398 46.7826 2.04398 46.7596 1.85071 46.5456C1.65582 46.3298 1.66228 46.3062 2.17616 45.3349C2.87804 44.0084 4.49917 41.1652 4.55359 41.1652C4.57758 41.1652 4.501 41.4095 4.38355 41.708Z\"\n            fill=\"black\"\n          />\n        </svg>\n      </p>\n      {/* <p style={{ flex: \"1 1 0%\", fontSize: 12, lineHeight: \"1em\", textAlign: \"right\", color: \"black\" }}>\n        <a href=\"http://pmnd.rs/\">pmnd.rs</a> <a href=\"https://github.com/pmndrs\">git</a> <a href=\"https://codesandbox.io/s/zxpv7\">csb</a>\n      </p> */}\n    </div>\n  )\n}\n","// Original: https://dribbble.com/shots/5708399-Christmas-Collisions\n// By: 𝔅𝔢𝔰𝔱𝔖𝔢𝔯𝔳𝔢𝔡𝔅𝔬𝔩𝔡 @bstsrvdbld\n\nimport ReactDOM from \"react-dom\"\nimport { Suspense } from \"react\"\nimport { App } from \"./App\"\nimport { Underlay, Overlay } from \"./DirtyFigmaExport\"\nimport \"./styles.css\"\n\nReactDOM.render(\n  <>\n    <Underlay />\n    <Suspense fallback={null}>\n      <App />\n    </Suspense>\n    <Overlay />\n  </>,\n  document.getElementById(\"root\"),\n)\n"],"sourceRoot":""}